package boot.data.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import boot.data.dto.MemBoardDto;
import boot.data.dto.MemberDto;
import boot.data.service.MemBoardService;
import boot.data.service.MemberService;

@Controller
@RequestMapping("/memboard")
public class MemBoardController {
	
	@Autowired
	MemBoardService service;
	
	@Autowired
	MemberService memberService;
	
	@GetMapping("/list")
	public String list(Model model) {
		
		int totalCount=service.getTotalCount();
		
		model.addAttribute("totalCount", totalCount);
		
		return "/memboard/memList";
	}
	
	@GetMapping("/form")
	public String form() {
		
		return "/memboard/addForm";
	}
	
	@PostMapping("/insert")
	public String insert(@ModelAttribute MemBoardDto dto,HttpSession session) {
		
		String myid=(String)session.getAttribute("myid");
		dto.setMyid(myid);
		dto.setName(memberService.getName(myid));
		
		String path=session.getServletContext().getRealPath("/savefile");
		//System.out.println("["+dto.getUpload()+"]");
		if(dto.getUpload().getOriginalFilename().equals("")) {
			dto.setUploadfile("no");
		}else {
			SimpleDateFormat sdf=new SimpleDateFormat("yyyyMMddHHmmss");
			String fileName=sdf.format(new Date())+"_"+dto.getUpload().getOriginalFilename();
			try {
				dto.getUpload().transferTo(new File(path+"\\"+fileName));
			} catch (IllegalStateException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			dto.setUploadfile(fileName);
		}
		
		service.insertMemBoard(dto);
		
		return "redirect:content?num="+service.getMaxNum();
	}
	
	@GetMapping("/content")
	public String content(Model model,@RequestParam String num) {
		
		service.updateReadCount(num);
		MemBoardDto dto=service.getData(num);
		model.addAttribute("dto", dto);
		return "memboard/content";
	}

}
